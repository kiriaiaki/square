/**
 * @file solution.h
 * @author kiriaiaki@domain.com
 * @brief Заголовочный файл с функциями решения квадратного уравнения
 */

#ifndef SOLUTION_H
#define SOLUTION_H

#include <assert.h>
#include <math.h>

#include "auxiliary_function.h"

/// Набор возможного количества решений квадратного уравнения
enum QuantityRoots
{
    ZERO_ROOTS = 0, ///< Указывает, что уравнение не имеет решений в рациональных числах
    ONE_ROOT = 1, ///< Указывает, что уравнение имеет один рациональный корень
    TWO_ROOTS = 2, ///< Указывает, что уравнение имеет два рациональных корня
    INFINITE_ROOTS = -1, ///< Указывает, что уравнение имеет бесконечно много решений
    IMPOSSIBLE_ROOTS = -2, ///< Указывает, что уравнение невозможно
    NOT_INITIALIZED = -3, ///< Указывает, что переменная не проинициализирована
};

/**
 * @brief Функций для решения квадратного уравнения вида ax^2+bx+c=0, где коэффициенты a, b и c не равны нулю.
 *
 * @param A Параметр квадратного уравнения при x^2
 * @param B Параметр квадратного уравнения при x
 * @param C Свободный член квадратного уравнения (при x^0)
 * @param X1 Указатель на ячейку памяти, где хранится переменная X1 - первый корень квадратного уравнения
 * @param X2 Указатель на ячейку памяти, где хранится переменная X2 - второй корень квадратного уравнения
 * @return Количество корней квадратного уравнения
 */
QuantityRoots SolveSquareEquation (const double A, const double B, const double C,
    double* const X1, double* const X2);

/**
 * @brief Функций для решения квадратного уравнения вида ax^2+bx+c=0.
 *
 * @param A Параметр квадратного уравнения при x^2
 * @param B Параметр квадратного уравнения при x
 * @param C Свободный член квадратного уравнения (при x^0)
 * @param X1 Указатель на ячейку памяти, где хранится переменная X1 - первый корень квадратного уравнения
 * @param X2 Указатель на ячейку памяти, где хранится переменная X2 - второй корень квадратного уравнения
 * @return Количество корней квадратного уравнения
 */
QuantityRoots SolveEquation (const double A, const double B, const double C,
    double* const X1, double* const X2);

/**
 * @brief
 *
 * @param B Параметр линейного уравнения при x
 * @param C Свободный член линейного уравнения (при x^0)
 * @param X1 Указатель на ячейку памяти, где хранится переменная X1 - корень линейного уравнения
 * @param X2 Указатель на ячейку памяти, где хранится переменная X2 - корень линейного уравнения (равен X1)
 * @return Количество корней линейного уравнения (данная функция всегда возвращает 1)
 */
QuantityRoots SolveLinearEquation (const double B, const double C,
    double* const X1, double* const X2);

#endif // SOLUTION_H
